# AUTOGENERATED! DO NOT EDIT! File to edit: ../notebooks/podverse/01_embeddings.ipynb.

# %% auto 0
__all__ = ['logger', 'log', 'embedding_models', 'get_embedding_model', 'get_embedding', 'load_embedding']

# %% ../notebooks/podverse/01_embeddings.ipynb 2
import cgnai
from pathlib import Path
import sys
from ..logging import cgnai_logger
import numpy as np
from ..fileio import ls, load

logger = cgnai_logger("embeddings")
log = logger.info

# %% ../notebooks/podverse/01_embeddings.ipynb 3
from pyannote.audio import Inference

embedding_models = {}

def get_embedding_model(duration:float = 4.0, step:float = 1.0, device="cuda"):
    if (duration, step, device) not in embedding_models:
        embedding_models[(duration, step, device)] = Inference("pyannote/embedding",
                                                       window="sliding",
                                                       duration=duration,
                                                       step=step,
                                                       device=device)
    return embedding_models[(duration, step, device)]

# %% ../notebooks/podverse/01_embeddings.ipynb 4
def get_embedding(wav, rate, duration:float = 4.0, step:float = 1.0, device="cuda"):
    model = get_embedding_model(duration, step, device)
    embeddings = model({'waveform': wav, "sample_rate": rate}).data
    return embeddings

# %% ../notebooks/podverse/01_embeddings.ipynb 5
def load_embedding(mp3_path):
    emb = load(str(mp3_path) + "_emb.npy")
    return emb/(np.linalg.norm(emb, axis=1,keepdims=True))
